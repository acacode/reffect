{"version":3,"file":"reffect-undoable.umd.js","sources":["src/index.ts"],"sourcesContent":["import { manage } from \"@reffect/core\";\r\nexport const undoable = (store, undoSize = 10) => {\r\n    const storeManager = manage(store);\r\n    const past = [];\r\n    let present = storeManager.initialState;\r\n    const future = [];\r\n    storeManager.subscribe((partialUpdate, prevState, currState) => {\r\n        if (past.length >= undoSize) {\r\n            past.shift();\r\n        }\r\n        past.push(prevState);\r\n        present = currState;\r\n    });\r\n    const undo = () => {\r\n        if (past.length) {\r\n            const lastPast = past.pop();\r\n            if (lastPast) {\r\n                future.push(present);\r\n                present = lastPast;\r\n                storeManager.partialUpdate(present);\r\n            }\r\n        }\r\n    };\r\n    const redo = () => {\r\n        if (future.length) {\r\n            const firstFuture = future.shift();\r\n            if (firstFuture) {\r\n                past.push(present);\r\n                present = firstFuture;\r\n                storeManager.partialUpdate(present);\r\n            }\r\n        }\r\n    };\r\n    return {\r\n        undo,\r\n        redo,\r\n    };\r\n};\r\n"],"names":["store","undoSize","storeManager","manage","past","present","initialState","future","subscribe","partialUpdate","prevState","currState","length","shift","push","undo","lastPast","pop","redo","firstFuture"],"mappings":"gEACwB,CAACA,EAAOC,EAAW,MACvC,MAAMC,EAAeC,SAAOH,GACtBI,EAAO,GACb,IAAIC,EAAUH,EAAaI,aAC3B,MAAMC,EAAS,GA4Bf,OA3BAL,EAAaM,UAAU,CAACC,EAAeC,EAAWC,KAC3BV,EAAfG,EAAKQ,QACLR,EAAKS,QAETT,EAAKU,KAAKJ,GACVL,EAAUM,IAsBP,CACHI,KArBS,KACT,GAAIX,EAAKQ,OAAQ,CACb,MAAMI,EAAWZ,EAAKa,MAClBD,IACAT,EAAOO,KAAKT,GACZA,EAAUW,EACVd,EAAaO,cAAcJ,MAgBnCa,KAZS,KACT,GAAIX,EAAOK,OAAQ,CACf,MAAMO,EAAcZ,EAAOM,QACvBM,IACAf,EAAKU,KAAKT,GACVA,EAAUc,EACVjB,EAAaO,cAAcJ"}